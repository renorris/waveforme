# Waveforme serverless.yml
# Copyright (C) 2023 Reese Norris - All Rights Reserved

org: rnorris
app: waveforme
service: waveforme
frameworkVersion: '3'
configValidationMode: error
deprecationNotificationMode: warn:summary

provider:
  name: aws
  deploymentMethod: direct
  runtime: nodejs14.x
  region: us-east-2
  stage: dev
  memorySize: 512
  architecture: arm64
  timeout: 10
  logRetentionInDays: 7

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-iam-roles-per-function

functions:
  serve:
    handler: handler.serve
    events:
      - httpApi:
          method: GET
          path: /
      - httpApi:
          method: GET
          path: /app
      - httpApi:
          method: GET
          path: /app/{page}
  
  stashResult:
    handler: handler.stashResult
    events:
      - httpApi:
          method: POST
          path: /rest/stashResult
  
  login:
    handler: handler.login
    events:
      - httpApi:
          method: POST
          path: /rest/login
    iamRoleStatements:
      - Effect: "Allow"
        Action: 
          - "s3:GetObject"
        Resource: "arn:aws:s3:::waveforme-jwt/*"
      - Effect: "Allow"
        Action: 
          - "dynamodb:GetItem"
        Resource: "arn:aws:dynamodb:us-east-2:804178625761:table/waveforme_users"
  
  verifyEmail:
    handler: handler.verifyEmail
    events:
      - httpApi:
          method: POST
          path: /rest/verifyEmail
    iamRoleStatements:
      - Effect: "Allow"
        Action: 
          - "s3:GetObject"
        Resource: "arn:aws:s3:::waveforme-jwt/*"
      - Effect: "Allow"
        Action: 
          - "dynamodb:GetItem"
        Resource: "arn:aws:dynamodb:us-east-2:804178625761:table/waveforme_users"
      - Effect: "Allow"
        Action:
          - "ses:SendEmail"
        Resource: "arn:aws:ses:us-east-2:804178625761:identity/*"
  
  createAccount:
    handler: handler.createAccount
    events:
      - httpApi:
          method: POST
          path: /rest/createAccount
    iamRoleStatements:
      - Effect: "Allow"
        Action: 
          - "s3:GetObject"
        Resource: "arn:aws:s3:::waveforme-jwt/*"
      - Effect: "Allow"
        Action: 
          - "dynamodb:GetItem"
          - "dynamodb:PutItem"
        Resource: "arn:aws:dynamodb:us-east-2:804178625761:table/waveforme_users"

custom:
  webpack:
    webpackConfig: 'webpack.config.server.js'

  serverless-offline:
    useChildProcesses: true
    noPrependStageInUrl: true
    host: 0.0.0.0
    httpPort: 3000